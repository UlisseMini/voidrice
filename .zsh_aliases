#!/bin/bash

# general
alias py="python"
alias ipy="ipython"
alias tm="tmux"
alias i3restart="killall -2 i3"
alias crfmt="crystal tool format"
alias luv="luvit"
alias reload="source ~/.zshrc"
alias wifi="sudo wifi toggle"
alias g="hub"
alias update="sudo pacman -Syu"
alias sv="sudoedit"
alias cr="crystal"
alias rm="rm -I"
alias ud="pushd ~/ && git commit -a -m 'update dotfiles' && git push && popd"
alias gruv="pushd ~/.config/nvim/plugged/gruvbox/"
alias l="clear"

alias s="fzf | xargs -r $EDITOR"
alias dc="find . -type d | fzf | xargs -r cd"

# git
alias gp="git push"
alias gc="git commit"
alias gm="git merge"
alias gu="git pull"

# for note taking
alias cheat="$EDITOR ~/.cheatsheet.md"

# golang aliases
alias gob="go build"
alias sgo="pushd /usr/local/go/src"
alias gos="cd $GOPATH/src/"
alias gop="cd $GOPATH/src/github.com/UlisseMini/"
alias got="go test -race"
alias goi="go install"
alias gor="go run"

cf() {
	if [ "$1" == "" ]; then
		echo "Usage: cf <file.vim>"
		return
	fi

    $EDITOR ~/.config/nvim/ftplugin/$1
}

# create git repo using hub
git_create() {
	if [ "$1" == "" ]; then
		echo "Usage: git_create <repo_name>"
		return
	fi

	# initalize git repo if .git does not exist
	if [ ! -f .git ]; then
		git init
		git add .
		git commit -a -m "Initial commit"
	fi

	hub create "$1"
	git remote set-url origin "https://github.com/UlisseMini/$1"
	git push -u origin master
}

# Build and compress binaries
gocompress() {
	out="${1:0:-3}"
	if [[ "$GOOS" == "windows" ]]; then
		out="$out.exe"
	fi

	go build -ldflags="-s -w" -o "$out" "$1"
	upx --brute --best "$out"
}

# aliases for finding files
alias locate="find . | grep -i"
alias rlocate="sudo find / 2>/dev/null | grep -i"

# editing
alias v="$EDITOR"
alias vi="$EDITOR"
alias vim="$EDITOR"
alias nvim="$EDITOR"

# make directory then cd into it
mc() {
	mkdir -p $1 && \
		cd $1
}

# make it easier to compile assembly progams
# i use the extention .asm so i'll trim the last 4 chars.
asm() {
	local out="${1:0:-4}"

	nasm -f elf64 "$1" -o $out.o && \
		ld $out.o -o $out && \
		rm $out.o
}

# compile nasm assembly with linker
asmf() {
	local out="${1:0:-4}"

	nasm  -f elf64 "$1" -o $out.o && \
		ld $out.o -o $out -lc --dynamic-linker /lib/ld-2.28.so && \
		rm $out.o
}

# disassemble programs with gdb, kinda a hack -- idc
disassemble() {
	echo "quit" | gdb -q -ex "disassemble main" $1 | tail -n +2 | head -n -1
}

# make it easier to compile C programs
c() {
	gcc -Wall "$1" -o "${1:0:-2}"
}

# compile and install C program to path
ci() {
	c $1 && mv ./${1:0:-2} ~/.local/bin
}

# killall function, that ACTUALLY kills all
ka() {
	while true; do
		# if killall fails then return
		killall $@ 2>/dev/null || break
		sleep 0.1
	done

	# show the processes
	ps awx | grep -v grep | grep "$1"
}

# brightness not working on my macbook, this is my workaround.
brightness() {
	sudo bash -c "echo '$1' > /sys/class/backlight/intel_backlight/brightness" &&
		cat "/sys/class/backlight/intel_backlight/brightness"
}

# Youtube stuffs
alias yt="youtube-dl --add-metadata -ic" # Download video link
alias yta="yt -x -f bestaudio/best" # Download only audio
alias YT="youtube-viewer" # Youtube streaming from the commandline!

# colors!
alias ls="ls --color=auto"
alias grep="grep --color=auto"
alias diff="diff --color=auto"

# Color cat - print file with syntax highlighting.
alias ccat="highlight --out-format=ansi -t 4"
